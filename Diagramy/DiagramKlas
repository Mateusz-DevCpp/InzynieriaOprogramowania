@startuml IO
    !define DARKBLUE
!includeurl https://raw.githubusercontent.com/Drakemor/RedDress-PlantUML/master/style.puml

class Manager{
    + dodaj(T) : bool
    + usun(T) : bool
    + wyszukaj(T) : T
    + get(int id) : T
    + count() : int
}
class ManagerKart{
    Manager<Karta>
}
class ManagerPracownikow{
    Manager<Pracownik>
}
class Repozytorium{
    - objects : List<T>
    + dodaj(T) : bool
    + usun(T) : bool
    + get(int id) : T
    + toString() : String
}
class RepozytoriumKart{
    Repozytorium<Karta>
}
class RepozytoriumPracownikow{
    Repozytorium<Pracownik>
}
class Pracownik{
    - karta : Karta
    - id : int
    - idKarty : int
    + Pracownik()
    + get...()
    + set...()
}
class Stanowisko{
    - nazwa : String
    - zarobki : float
    + Stanowisko()
    + get...()
    + set...()
}
class DaneOsobowe{
    - imie : String
    - nazwisko : String
    - PESEL : String
    + DaneOsobowe()
    + get...()
    + set...()
}
class Praktykant extends Pracownik{
}
class Adres{
    - kodPocztowy : String
    - miasto : String
    - ulica : String
    - mieszkanie : String
    + Adres() : String
    + set...()
    + get...()
}
class Kontakt{
    - email : String
    - nrTelefonu : String
    + Kontakt() : String
    + get...()
    + set...()
}
class Karta{
    - id : int
    - przypisana : bool
    - historiaLokalizacji : List<Lokalizacja>
    - uprawnienia: Uprawnienia
    + clear()
    + czyMogeWejsc() : bool //?
    // koniec pracy - początek - iloscgodzinstandardowych = iloscNadgodzin
}
class Departamenty{
    - nazwa : String
    - id : int
    - lokalizacje : List<Lokalizacja>
}
class Lokalizacja{
    - nazwa : String
    - data : Date
}
class Uprawnienia{
    - typ : int
}
class Administrator
class ManagerWynagrodzen
class RepozytoriumWynagrodzen
class Wynagrodzenie{
    - pracownik : Pracownik
    - wartoscWynagrodzenia : double
    - stawkaZaNadgodziny : double
    - dataOtrzymania : Date
    - iloscNadgodzin : int
    + dodatekZaNadgodziny() : double
}
class RepoBazaDanych
class RBazaDanychWynagrodzen

Manager <-- ManagerKart
Manager <-- ManagerPracownikow
Repozytorium <-- RepozytoriumKart
Repozytorium <-- RepozytoriumPracownikow
ManagerPracownikow -- RepozytoriumPracownikow
ManagerKart -- RepozytoriumKart
RepozytoriumPracownikow -- Pracownik
RepozytoriumKart -- Karta
Lokalizacja -- Uprawnienia
Karta -- Uprawnienia
Lokalizacja -- Departamenty
Pracownik -- Stanowisko
Pracownik -- Kontakt
Pracownik -- Adres
Pracownik -- DaneOsobowe
Manager <-- ManagerWynagrodzen
Repozytorium <-- RepozytoriumWynagrodzen
ManagerWynagrodzen -- RepozytoriumWynagrodzen
ManagerWynagrodzen -- Wynagrodzenie
Wynagrodzenie -- Pracownik
RepoBazaDanych <-- RBazaDanychWynagrodzen
@endnuml
//może builder pracowników, ale na razie zbyt skomplikowane